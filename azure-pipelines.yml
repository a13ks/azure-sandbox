# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
  - master
jobs:
- job: A1
  pool:
    vmImage: 'vs2017-win2016'

  steps:
  - template: test-template.yml

  - task: Bash@3
    inputs:
      targetType: 'inline'
      script: echo "this is my value from another script $(foo.bar)"

  - task: PowerShell@2
    inputs:
      targetType: 'inline'
      script: |
        Import-PfxCertificate -FilePath dummy.pfx -CertStoreLocation Cert:\LocalMachine\My
    displayName: "Install cert"

  - script: |
      cmake -G "Visual Studio 15 2017" -B$(Build.BinariesDirectory) -DCMAKE_INSTALL_PREFIX=$(Build.BinariesDirectory)/install
      cmake --build $(Build.BinariesDirectory) --target install
    displayName: 'Checkout and build'
    
  - script: |
      cmake --build $(Build.BinariesDirectory) --target doc
    displayName: 'Preparing documentation'

  - task: CopyFiles@2
    inputs:
      sourceFolder: $(Build.BinariesDirectory)
      # contents: 'Debug/**'
      contents: '**'
      targetFolder: $(Build.ArtifactStagingDirectory)

  - task: ArchiveFiles@2
    inputs:
      rootFolderOrFile: '$(Build.BinariesDirectory)/doc/html' 
      #includeRootFolder: true 
      archiveType: 'zip' # Options: zip, 7z, tar, wim
      #tarCompression: 'gz' # Optional. Options: gz, bz2, xz, none
      archiveFile: '$(Build.ArtifactStagingDirectory)/doxygen-html.zip' 
      #replaceExistingArchive: true 
      #verbose: # Optional
      #quiet: # Optional

  - task: PublishBuildArtifacts@1
    inputs:
      pathtoPublish: $(Build.ArtifactStagingDirectory)
      artifactName: MyBuildOutputs

- job: A2
  dependsOn: A1
  steps:
    - checkout: none
    - task: PublishBuildArtifacts@1
      inputs:
        pathtoPublish: $(Build.ArtifactStagingDirectory)
        artifactName: MyBuildOutputs
